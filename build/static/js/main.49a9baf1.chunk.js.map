{"version":3,"sources":["Components/DisplayReminder.js","Components/ReminderForm.js","ReminderApp.js","index.js"],"names":["baseUrl","DisplayReminder","props","painaNappia","event","preventDefault","window","confirm","text","url","key","axios","delete","then","console","log","get","response","asetaTila","reminders","data","aika","Date","reminder","date","toLocaleString","id","render","this","onSubmit","type","React","Component","ReminderForm","handleReminderTextChange","setState","newReminderText","target","value","handleReminderTimeChange","newReminderTime","addReminder","state","toString","alert","find","muistutus","post","concat","onChange","ReminderApp","paivitaTila","muistutukset","bind","map","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49a9baf1.chunk.js","sourcesContent":["import { render } from '@testing-library/react'\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nconst baseUrl = '/api/reminders/'\r\n\r\nclass DisplayReminder extends React.Component {\r\n  constructor (props) {\r\n    super (props);\r\n    this.asetaTila = props.asetaTila;\r\n    this.aika = new Date(props.reminder.date).toLocaleString()\r\n    this.key = props.reminder.id\r\n    this.text = props.reminder.text\r\n  }\r\n\r\n  componentDidMount() {render()} // tämä on olemassa vain koska konsoli valitti ettei render() -funktiota kutsuta koskaan\r\n\r\n  painaNappia = (event) => {\r\n    event.preventDefault()\r\n    if (window.confirm(\"Haluatko varmasti poistaa muistutuksen \"+this.text+\"?\")) {\r\n      let url = (baseUrl+this.key)\r\n      axios.delete(url).then(\r\n        console.log(\"Muistutus \"+this.key+ \" poistettu.\")\r\n      )\r\n      axios\r\n        .get(baseUrl)\r\n        .then(response =>\r\n          this.asetaTila({\r\n          reminders: response.data\r\n          })      \r\n        )\r\n      }\r\n  }  \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>{this.aika + \" \" + this.text} <form onSubmit={this.painaNappia}><button type=\"submit\">Poista</button></form>      \r\n      </div>\r\n    )\r\n  }\r\n}  \r\n\r\nexport default DisplayReminder","import React from 'react';\r\nimport axios from 'axios';\r\nconst baseUrl = '/api/reminders/'\r\n\r\nclass ReminderForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reminders: [],\r\n            newReminderTime: new Date(),\r\n            newReminderText: '',\r\n            //vapaaId : props.vapaaId\r\n        }\r\n        this.asetaTila = props.asetaTila;\r\n    } \r\n    \r\n    componentDidMount() {\r\n        //console.log('ReminderForm Mounttasi')\r\n        axios.get(baseUrl).then(response => {\r\n          this.setState({ \r\n            reminders: response.data,\r\n          })\r\n          //this.asetaVapaaId()\r\n        })\r\n      }\r\n\r\n    /*\r\n    asetaVapaaId() {\r\n      axios.get(baseUrl).then(response => {\r\n          let firstAvailableId = 1\r\n          let takenIds = []\r\n          let i = 1\r\n          for (i=0; i<response.data.length ; i++) {\r\n            takenIds.push(response.data[i].id)\r\n          }\r\n          while (takenIds.includes(firstAvailableId)) {\r\n            firstAvailableId = firstAvailableId + 1\r\n          }\r\n          this.setState({\r\n            vapaaId : firstAvailableId\r\n         })\r\n       })\r\n    }\r\n  */  \r\n\r\n    handleReminderTextChange = (event) => {this.setState({ newReminderText: event.target.value })}\r\n    handleReminderTimeChange = (event) => {this.setState({ newReminderTime: event.target.value })}\r\n\r\n    addReminder = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const reminder = {\r\n          text: this.state.newReminderText,\r\n          date: new Date(this.state.newReminderTime),\r\n          //id: this.state.vapaaId\r\n        }\r\n\r\n        if (reminder.date.toString()===\"Invalid Date\") {alert(\"Syötä kelvollinen aika\")} \r\n        else if( !this.state.reminders.find(muistutus => muistutus.text === reminder.text)){ \r\n            axios\r\n            .post(baseUrl, reminder)\r\n            .then(response => {\r\n              axios.get(baseUrl).then(response => {\r\n                this.setState({\r\n                  reminders: response.data\r\n                })\r\n                this.asetaTila({\r\n                  newReminderText: '',\r\n                  reminders: response.data\r\n                })\r\n              })\r\n              //this.asetaVapaaId()\r\n            })\r\n          console.log(\"Muistutus vastaanotettu, muistutukset:\");console.log(this.state.reminders.concat(reminder))\r\n        } else {alert(\"Muistutus '\"+reminder.text+\"' on jo olemassa!\")}\r\n      }    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.addReminder}>\r\n                <div>\r\n                Muista: \r\n                    <input \r\n                    value={this.state.newReminderText} \r\n                    onChange={this.handleReminderTextChange}\r\n                    /><br/>\r\n                Aikaan: \r\n                    <input \r\n                    value={this.state.newReminderTime} \r\n                    onChange={this.handleReminderTimeChange}\r\n                    />           \r\n                </div>\r\n                <div>\r\n                <button type=\"submit\">Lisää muistutus</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            )   \r\n    }\r\n}\r\n\r\nexport default ReminderForm","import React from 'react';\n\nimport './ReminderApp.css';\nimport DisplayReminder from './Components/DisplayReminder'\nimport ReminderForm from './Components/ReminderForm.js'\n\nimport axios from 'axios'\nconst baseUrl = '/api/reminders/'\n\nclass ReminderApp extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      reminders: [\n        \n      ],\n      //vapaaId: 1\n    }\n  }\n\n  paivitaTila() {\n    axios\n      .get(baseUrl)\n      .then(response => {\n        /*\n        let firstAvailableId = 1\n        let takenIds = []\n        let i = 1\n        for (i=0; i<response.data.length ; i++) {\n          takenIds.push(response.data[i].id)\n        }\n        while (takenIds.includes(firstAvailableId)) {\n          firstAvailableId = firstAvailableId + 1\n        }\n        */\n        this.setState({ \n          reminders: response.data,\n          //vapaaId : firstAvailableId\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.paivitaTila()\n  }\n  \n\n  render() {\n    return (\n      <div>\n        <h2>Lisää muistutus:</h2>\n        <ReminderForm \n          muistutukset={this.state.reminders} \n          asetaTila={this.paivitaTila.bind(this)} \n          //vapaaId={this.state.vapaaId}\n        />\n        <br/>\n        <h2>Muista:</h2>    \n         {this.state.reminders.map(reminder =>\n           <DisplayReminder key ={reminder.id} reminder={reminder} asetaTila={this.paivitaTila.bind(this)} />\n         )}\n      </div>\n    )\n  }\n}\n\nexport default ReminderApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReminderApp from './ReminderApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReminderApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}